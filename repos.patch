
project kernel/
diff --git a/src/plat/bcm2711/overlay-rpi4.dts b/src/plat/bcm2711/overlay-rpi4.dts
index e0c52531..eedf9c14 100644
--- a/src/plat/bcm2711/overlay-rpi4.dts
+++ b/src/plat/bcm2711/overlay-rpi4.dts
@@ -9,10 +9,10 @@
 / {
 	chosen {
 		seL4,elfloader-devices =
-		    "serial1";
+		    "serial0";
 
 		seL4,kernel-devices =
-		    "serial1",
+		    "serial0",
 		    &{/soc/interrupt-controller@40041000},
 		    &{/soc/local_intc@40000000},
 		    &{/timer};
@@ -43,10 +43,12 @@
 
 	memory@0 {
 		device_type = "memory";
-		reg = < 0x00000000 0x00000000 0x3b400000
-			0x00000000 0x40000000 0xbc000000
-			0x00000001 0x00000000 0x80000000
-			0x00000001 0x80000000 0x80000000 >;
+		/* 3892MB/3.8GB */
+		/* No memory available above 0x1_0000_0000, because we only have 4GB DRAM. */
+		reg = < 0x00000000 0x00000000 0x3b400000 	/* 0x0000_0000 - 0x3b40_0000: 948MB */
+				0x00000000 0x44000000 0xb8000000	/* 0x4400_0000 - 0xfc00_0000: 2944MB */
+			/*0x00000001 0x00000000 0x80000000
+			0x00000001 0x80000000 0x80000000*/ >;
 	};
 
 	reserved-memory {
diff --git a/tools/dts/rpi4.dts b/tools/dts/rpi4.dts
index b94127ec..9b4e068f 100644
--- a/tools/dts/rpi4.dts
+++ b/tools/dts/rpi4.dts
@@ -21,6 +21,11 @@
 	aliases {
 		serial0 = "/soc/serial@7e201000";
 		serial1 = "/soc/serial@7e215040";
+		serial2 = "/soc/serial@7e201400";
+		serial3 = "/soc/serial@7e201600";
+		serial4 = "/soc/serial@7e201800";
+		serial5 = "/soc/serial@7e201a00";
+		spi0 = "/soc/spi@7e204000";
 		emmc2bus = "/emmc2bus";
 		ethernet0 = "/scb/ethernet@7d580000";
 		pcie0 = "/scb/pcie@7d500000";

project projects/seL4_projects_libs/
diff --git a/libsel4vm/src/arch/arm/vgic/gicv2.h b/libsel4vm/src/arch/arm/vgic/gicv2.h
index 1616d63..b25f34d 100644
--- a/libsel4vm/src/arch/arm/vgic/gicv2.h
+++ b/libsel4vm/src/arch/arm/vgic/gicv2.h
@@ -24,6 +24,8 @@
 #define GIC_PADDR   0xc4300000
 #elif defined(CONFIG_PLAT_ZYNQMP)
 #define GIC_PADDR   0xf9000000
+#elif defined(CONFIG_PLAT_BCM2711)
+#define GIC_PADDR   0xff840000
 #else
 #error "Unsupported platform for GIC"
 #endif

project projects/util_libs/
diff --git a/libplatsupport/plat_include/bcm2711/platsupport/plat/serial.h b/libplatsupport/plat_include/bcm2711/platsupport/plat/serial.h
index 0bfc790..6b918f7 100644
--- a/libplatsupport/plat_include/bcm2711/platsupport/plat/serial.h
+++ b/libplatsupport/plat_include/bcm2711/platsupport/plat/serial.h
@@ -72,8 +72,8 @@
 #define UART4_IRQ  153
 #define UART5_IRQ  153
 
-#define DEFAULT_SERIAL_PADDR      UART1_PADDR
-#define DEFAULT_SERIAL_INTERRUPT  UART1_IRQ
+#define DEFAULT_SERIAL_PADDR      UART0_PADDR
+#define DEFAULT_SERIAL_INTERRUPT  UART0_IRQ
 
 
 enum chardev_id {
@@ -96,5 +96,5 @@ enum chardev_id {
     PS_SERIAL5 = BCM2xxx_UART5,
 
     /* Defaults */
-    PS_SERIAL_DEFAULT = BCM2xxx_UART1
+    PS_SERIAL_DEFAULT = BCM2xxx_UART0
 };
\ No newline at end of file
diff --git a/libplatsupport/src/mach/bcm/pl011_uart.c b/libplatsupport/src/mach/bcm/pl011_uart.c
index 9463728..6bd63e8 100644
--- a/libplatsupport/src/mach/bcm/pl011_uart.c
+++ b/libplatsupport/src/mach/bcm/pl011_uart.c
@@ -119,7 +119,7 @@ static void pl011_uart_handle_irq(ps_chardevice_t *dev)
     pl011_regs_t *r = pl011_uart_get_priv(dev);
 
     // Clear (all) interrupts
-    r->icr = 0x7ff;
+    r->icr = 0x7f0;
 }
 
 static int pl011_uart_cr_configure(ps_chardevice_t *dev)
@@ -158,20 +158,33 @@ static int pl011_uart_baudrate_div_configure(ps_chardevice_t *dev)
 {
     // Base UART clock according to https://github.com/raspberrypi/firmware/issues/951
     const uint32_t freq_uart_clk = 48000000;
-    const uint32_t baud_rate = 115200;
+    // const uint32_t baud_rate = 115200;
+    uint32_t baud_rate;
+    switch (dev->id) {
+        case BCM2xxx_UART3: // Telemetry
+            baud_rate = 57600;
+            break;
+        default:
+            baud_rate = 115200;
+            break;
+    }
 
-    double baud_div = (double) freq_uart_clk / (double)(16.0 * baud_rate);
-    double frac_div = baud_div - (uint32_t) baud_div;
+    // double baud_div = (double) freq_uart_clk / (double)(16.0 * baud_rate);
+    // double frac_div = baud_div - (uint32_t) baud_div;
+    uint32_t divisor = (freq_uart_clk * 4) / baud_rate;
+    uint32_t val;
     pl011_regs_t *r = pl011_uart_get_priv(dev);
 
     // Set IBRD register
-    uint32_t val = r->ibrd;
-    val |= (uint32_t) baud_div;
+    // uint32_t val = r->ibrd;
+    // val |= (uint32_t) baud_div;
+    val = divisor >> 6;
     r->ibrd = val;
 
     // Set FBRD register
-    val = r->fbrd;
-    val |= (uint32_t)(frac_div * 64.0 + 0.5);
+    // val = r->fbrd;
+    // val |= (uint32_t)(frac_div * 64.0 + 0.5);
+    val = divisor & 0x3f;
     r->fbrd = val;
 
     return 0;
@@ -227,7 +240,8 @@ static int pl011_uart_configure(ps_chardevice_t *dev)
      *
      */
     // Enable FIFO
-    //pl011_uart_enable_fifo(dev);
+    // colored-dye (2023/03/22): enable FIFO
+    pl011_uart_enable_fifo(dev);
 
     // Enable UART
     pl011_uart_enable(dev);
@@ -300,7 +314,8 @@ int pl011_uart_init(const struct dev_defn *defn, const ps_io_ops_t *ops, ps_char
     dev->handle_irq = &pl011_uart_handle_irq;
     dev->irqs       = defn->irqs;
     dev->ioops      = *ops;
-    dev->flags      = SERIAL_AUTO_CR;
+    // dev->flags      = SERIAL_AUTO_CR;
+    dev->flags      = 0;
 
     pl011_uart_configure(dev);
 
@@ -314,17 +329,21 @@ int pl011_uart_getchar(ps_chardevice_t *d)
 
     // Only if receive FIFO is not empty
     if (!(r->fr & FR_RXFE)) {
-        ch = (int)(r->dr & MASK(8));
-    }
+        ch = (int)(r->dr);
+        if (ch & 0xff00) {
+            LOG_ERROR("ERROR: %04X", ch & 0xff00);
+        }
+        ch &= MASK(8);
+     }
 
     return ch;
 }
 
 int pl011_uart_putchar(ps_chardevice_t *d, int c)
 {
-    if ((d->flags & SERIAL_AUTO_CR) && ((char)c == '\n')) {
-        pl011_uart_putchar(d, '\r');
-    }
+    // if ((d->flags & SERIAL_AUTO_CR) && ((char)c == '\n')) {
+    //     pl011_uart_putchar(d, '\r');
+    // }
 
     pl011_regs_t *r = pl011_uart_get_priv(d);
 

project projects/vm/
diff --git a/Findcamkes-arm-vm.cmake b/Findcamkes-arm-vm.cmake
index 9797c5c..f7378ff 100644
--- a/Findcamkes-arm-vm.cmake
+++ b/Findcamkes-arm-vm.cmake
@@ -36,7 +36,6 @@ macro(camkes_arm_vm_setup_arm_vm_environment)
     find_package(camkes-tool REQUIRED)
     find_package(global-components REQUIRED)
     find_package(camkes-vm REQUIRED)
-    find_package(camkes-vm-images REQUIRED)
     find_package(sel4_projects_libs REQUIRED)
     camkes_tool_setup_camkes_build_environment()
     sel4_projects_libs_import_libraries()
diff --git a/components/VM_Arm/src/modules/init_ram.c b/components/VM_Arm/src/modules/init_ram.c
index 326fc66..5b0504e 100644
--- a/components/VM_Arm/src/modules/init_ram.c
+++ b/components/VM_Arm/src/modules/init_ram.c
@@ -18,6 +18,9 @@ void WEAK init_ram_module(vm_t *vm, void *cookie)
                                  vm_config.ram.base,
                                  vm_config.ram.size,
                                  vm->mem.map_one_to_one);
+#ifdef CONFIG_PLAT_BCM2711
+    vm_ram_register_at(vm, 0x40000000, 0x20000000, true);
+#endif
     assert(!err);
 }
 

project seL4_repos_patches/
diff --git a/repos.patch b/repos.patch
index 1d33fa3..e69de29 100644
--- a/repos.patch
+++ b/repos.patch
@@ -1,458 +0,0 @@
-
-project kernel/
-diff --git a/src/plat/bcm2711/overlay-rpi4.dts b/src/plat/bcm2711/overlay-rpi4.dts
-index e0c52531..eedf9c14 100644
---- a/src/plat/bcm2711/overlay-rpi4.dts
-+++ b/src/plat/bcm2711/overlay-rpi4.dts
-@@ -9,10 +9,10 @@
- / {
- 	chosen {
- 		seL4,elfloader-devices =
--		    "serial1";
-+		    "serial0";
- 
- 		seL4,kernel-devices =
--		    "serial1",
-+		    "serial0",
- 		    &{/soc/interrupt-controller@40041000},
- 		    &{/soc/local_intc@40000000},
- 		    &{/timer};
-@@ -43,10 +43,12 @@
- 
- 	memory@0 {
- 		device_type = "memory";
--		reg = < 0x00000000 0x00000000 0x3b400000
--			0x00000000 0x40000000 0xbc000000
--			0x00000001 0x00000000 0x80000000
--			0x00000001 0x80000000 0x80000000 >;
-+		/* 3892MB/3.8GB */
-+		/* No memory available above 0x1_0000_0000, because we only have 4GB DRAM. */
-+		reg = < 0x00000000 0x00000000 0x3b400000 	/* 0x0000_0000 - 0x3b40_0000: 948MB */
-+				0x00000000 0x44000000 0xb8000000	/* 0x4400_0000 - 0xfc00_0000: 2944MB */
-+			/*0x00000001 0x00000000 0x80000000
-+			0x00000001 0x80000000 0x80000000*/ >;
- 	};
- 
- 	reserved-memory {
-diff --git a/tools/dts/rpi4.dts b/tools/dts/rpi4.dts
-index b94127ec..9b4e068f 100644
---- a/tools/dts/rpi4.dts
-+++ b/tools/dts/rpi4.dts
-@@ -21,6 +21,11 @@
- 	aliases {
- 		serial0 = "/soc/serial@7e201000";
- 		serial1 = "/soc/serial@7e215040";
-+		serial2 = "/soc/serial@7e201400";
-+		serial3 = "/soc/serial@7e201600";
-+		serial4 = "/soc/serial@7e201800";
-+		serial5 = "/soc/serial@7e201a00";
-+		spi0 = "/soc/spi@7e204000";
- 		emmc2bus = "/emmc2bus";
- 		ethernet0 = "/scb/ethernet@7d580000";
- 		pcie0 = "/scb/pcie@7d500000";
-
-project projects/seL4_projects_libs/
-diff --git a/libsel4vm/src/arch/arm/vgic/gicv2.h b/libsel4vm/src/arch/arm/vgic/gicv2.h
-index 1616d63..b25f34d 100644
---- a/libsel4vm/src/arch/arm/vgic/gicv2.h
-+++ b/libsel4vm/src/arch/arm/vgic/gicv2.h
-@@ -24,6 +24,8 @@
- #define GIC_PADDR   0xc4300000
- #elif defined(CONFIG_PLAT_ZYNQMP)
- #define GIC_PADDR   0xf9000000
-+#elif defined(CONFIG_PLAT_BCM2711)
-+#define GIC_PADDR   0xff840000
- #else
- #error "Unsupported platform for GIC"
- #endif
-
-project projects/util_libs/
-diff --git a/libplatsupport/plat_include/bcm2711/platsupport/plat/serial.h b/libplatsupport/plat_include/bcm2711/platsupport/plat/serial.h
-index 0bfc790..6b918f7 100644
---- a/libplatsupport/plat_include/bcm2711/platsupport/plat/serial.h
-+++ b/libplatsupport/plat_include/bcm2711/platsupport/plat/serial.h
-@@ -72,8 +72,8 @@
- #define UART4_IRQ  153
- #define UART5_IRQ  153
- 
--#define DEFAULT_SERIAL_PADDR      UART1_PADDR
--#define DEFAULT_SERIAL_INTERRUPT  UART1_IRQ
-+#define DEFAULT_SERIAL_PADDR      UART0_PADDR
-+#define DEFAULT_SERIAL_INTERRUPT  UART0_IRQ
- 
- 
- enum chardev_id {
-@@ -96,5 +96,5 @@ enum chardev_id {
-     PS_SERIAL5 = BCM2xxx_UART5,
- 
-     /* Defaults */
--    PS_SERIAL_DEFAULT = BCM2xxx_UART1
-+    PS_SERIAL_DEFAULT = BCM2xxx_UART0
- };
-\ No newline at end of file
-diff --git a/libplatsupport/src/mach/bcm/pl011_uart.c b/libplatsupport/src/mach/bcm/pl011_uart.c
-index 9463728..6bd63e8 100644
---- a/libplatsupport/src/mach/bcm/pl011_uart.c
-+++ b/libplatsupport/src/mach/bcm/pl011_uart.c
-@@ -119,7 +119,7 @@ static void pl011_uart_handle_irq(ps_chardevice_t *dev)
-     pl011_regs_t *r = pl011_uart_get_priv(dev);
- 
-     // Clear (all) interrupts
--    r->icr = 0x7ff;
-+    r->icr = 0x7f0;
- }
- 
- static int pl011_uart_cr_configure(ps_chardevice_t *dev)
-@@ -158,20 +158,33 @@ static int pl011_uart_baudrate_div_configure(ps_chardevice_t *dev)
- {
-     // Base UART clock according to https://github.com/raspberrypi/firmware/issues/951
-     const uint32_t freq_uart_clk = 48000000;
--    const uint32_t baud_rate = 115200;
-+    // const uint32_t baud_rate = 115200;
-+    uint32_t baud_rate;
-+    switch (dev->id) {
-+        case BCM2xxx_UART3: // Telemetry
-+            baud_rate = 57600;
-+            break;
-+        default:
-+            baud_rate = 115200;
-+            break;
-+    }
- 
--    double baud_div = (double) freq_uart_clk / (double)(16.0 * baud_rate);
--    double frac_div = baud_div - (uint32_t) baud_div;
-+    // double baud_div = (double) freq_uart_clk / (double)(16.0 * baud_rate);
-+    // double frac_div = baud_div - (uint32_t) baud_div;
-+    uint32_t divisor = (freq_uart_clk * 4) / baud_rate;
-+    uint32_t val;
-     pl011_regs_t *r = pl011_uart_get_priv(dev);
- 
-     // Set IBRD register
--    uint32_t val = r->ibrd;
--    val |= (uint32_t) baud_div;
-+    // uint32_t val = r->ibrd;
-+    // val |= (uint32_t) baud_div;
-+    val = divisor >> 6;
-     r->ibrd = val;
- 
-     // Set FBRD register
--    val = r->fbrd;
--    val |= (uint32_t)(frac_div * 64.0 + 0.5);
-+    // val = r->fbrd;
-+    // val |= (uint32_t)(frac_div * 64.0 + 0.5);
-+    val = divisor & 0x3f;
-     r->fbrd = val;
- 
-     return 0;
-@@ -227,7 +240,8 @@ static int pl011_uart_configure(ps_chardevice_t *dev)
-      *
-      */
-     // Enable FIFO
--    //pl011_uart_enable_fifo(dev);
-+    // colored-dye (2023/03/22): enable FIFO
-+    pl011_uart_enable_fifo(dev);
- 
-     // Enable UART
-     pl011_uart_enable(dev);
-@@ -300,7 +314,8 @@ int pl011_uart_init(const struct dev_defn *defn, const ps_io_ops_t *ops, ps_char
-     dev->handle_irq = &pl011_uart_handle_irq;
-     dev->irqs       = defn->irqs;
-     dev->ioops      = *ops;
--    dev->flags      = SERIAL_AUTO_CR;
-+    // dev->flags      = SERIAL_AUTO_CR;
-+    dev->flags      = 0;
- 
-     pl011_uart_configure(dev);
- 
-@@ -314,17 +329,21 @@ int pl011_uart_getchar(ps_chardevice_t *d)
- 
-     // Only if receive FIFO is not empty
-     if (!(r->fr & FR_RXFE)) {
--        ch = (int)(r->dr & MASK(8));
--    }
-+        ch = (int)(r->dr);
-+        if (ch & 0xff00) {
-+            LOG_ERROR("ERROR: %04X", ch & 0xff00);
-+        }
-+        ch &= MASK(8);
-+     }
- 
-     return ch;
- }
- 
- int pl011_uart_putchar(ps_chardevice_t *d, int c)
- {
--    if ((d->flags & SERIAL_AUTO_CR) && ((char)c == '\n')) {
--        pl011_uart_putchar(d, '\r');
--    }
-+    // if ((d->flags & SERIAL_AUTO_CR) && ((char)c == '\n')) {
-+    //     pl011_uart_putchar(d, '\r');
-+    // }
- 
-     pl011_regs_t *r = pl011_uart_get_priv(d);
- 
-
-project projects/vm/
-diff --git a/Findcamkes-arm-vm.cmake b/Findcamkes-arm-vm.cmake
-index 9797c5c..f7378ff 100644
---- a/Findcamkes-arm-vm.cmake
-+++ b/Findcamkes-arm-vm.cmake
-@@ -36,7 +36,6 @@ macro(camkes_arm_vm_setup_arm_vm_environment)
-     find_package(camkes-tool REQUIRED)
-     find_package(global-components REQUIRED)
-     find_package(camkes-vm REQUIRED)
--    find_package(camkes-vm-images REQUIRED)
-     find_package(sel4_projects_libs REQUIRED)
-     camkes_tool_setup_camkes_build_environment()
-     sel4_projects_libs_import_libraries()
-diff --git a/components/VM_Arm/src/modules/init_ram.c b/components/VM_Arm/src/modules/init_ram.c
-index 326fc66..5b0504e 100644
---- a/components/VM_Arm/src/modules/init_ram.c
-+++ b/components/VM_Arm/src/modules/init_ram.c
-@@ -18,6 +18,9 @@ void WEAK init_ram_module(vm_t *vm, void *cookie)
-                                  vm_config.ram.base,
-                                  vm_config.ram.size,
-                                  vm->mem.map_one_to_one);
-+#ifdef CONFIG_PLAT_BCM2711
-+    vm_ram_register_at(vm, 0x40000000, 0x20000000, true);
-+#endif
-     assert(!err);
- }
- 
-
-project seL4_repos_patches/
-diff --git a/repos.patch b/repos.patch
-index 751deb6..e69de29 100644
---- a/repos.patch
-+++ b/repos.patch
-@@ -1,204 +0,0 @@
--
--project kernel/
--diff --git a/src/plat/bcm2711/overlay-rpi4.dts b/src/plat/bcm2711/overlay-rpi4.dts
--index e0c52531..eedf9c14 100644
----- a/src/plat/bcm2711/overlay-rpi4.dts
--+++ b/src/plat/bcm2711/overlay-rpi4.dts
--@@ -9,10 +9,10 @@
-- / {
-- 	chosen {
-- 		seL4,elfloader-devices =
---		    "serial1";
--+		    "serial0";
-- 
-- 		seL4,kernel-devices =
---		    "serial1",
--+		    "serial0",
-- 		    &{/soc/interrupt-controller@40041000},
-- 		    &{/soc/local_intc@40000000},
-- 		    &{/timer};
--@@ -43,10 +43,12 @@
-- 
-- 	memory@0 {
-- 		device_type = "memory";
---		reg = < 0x00000000 0x00000000 0x3b400000
---			0x00000000 0x40000000 0xbc000000
---			0x00000001 0x00000000 0x80000000
---			0x00000001 0x80000000 0x80000000 >;
--+		/* 3892MB/3.8GB */
--+		/* No memory available above 0x1_0000_0000, because we only have 4GB DRAM. */
--+		reg = < 0x00000000 0x00000000 0x3b400000 	/* 0x0000_0000 - 0x3b40_0000: 948MB */
--+				0x00000000 0x44000000 0xb8000000	/* 0x4400_0000 - 0xfc00_0000: 2944MB */
--+			/*0x00000001 0x00000000 0x80000000
--+			0x00000001 0x80000000 0x80000000*/ >;
-- 	};
-- 
-- 	reserved-memory {
--diff --git a/tools/dts/rpi4.dts b/tools/dts/rpi4.dts
--index b94127ec..9b4e068f 100644
----- a/tools/dts/rpi4.dts
--+++ b/tools/dts/rpi4.dts
--@@ -21,6 +21,11 @@
-- 	aliases {
-- 		serial0 = "/soc/serial@7e201000";
-- 		serial1 = "/soc/serial@7e215040";
--+		serial2 = "/soc/serial@7e201400";
--+		serial3 = "/soc/serial@7e201600";
--+		serial4 = "/soc/serial@7e201800";
--+		serial5 = "/soc/serial@7e201a00";
--+		spi0 = "/soc/spi@7e204000";
-- 		emmc2bus = "/emmc2bus";
-- 		ethernet0 = "/scb/ethernet@7d580000";
-- 		pcie0 = "/scb/pcie@7d500000";
--
--project projects/util_libs/
--diff --git a/libplatsupport/plat_include/bcm2711/platsupport/plat/serial.h b/libplatsupport/plat_include/bcm2711/platsupport/plat/serial.h
--index 0bfc790..6b918f7 100644
----- a/libplatsupport/plat_include/bcm2711/platsupport/plat/serial.h
--+++ b/libplatsupport/plat_include/bcm2711/platsupport/plat/serial.h
--@@ -72,8 +72,8 @@
-- #define UART4_IRQ  153
-- #define UART5_IRQ  153
-- 
---#define DEFAULT_SERIAL_PADDR      UART1_PADDR
---#define DEFAULT_SERIAL_INTERRUPT  UART1_IRQ
--+#define DEFAULT_SERIAL_PADDR      UART0_PADDR
--+#define DEFAULT_SERIAL_INTERRUPT  UART0_IRQ
-- 
-- 
-- enum chardev_id {
--@@ -96,5 +96,5 @@ enum chardev_id {
--     PS_SERIAL5 = BCM2xxx_UART5,
-- 
--     /* Defaults */
---    PS_SERIAL_DEFAULT = BCM2xxx_UART1
--+    PS_SERIAL_DEFAULT = BCM2xxx_UART0
-- };
--\ No newline at end of file
--diff --git a/libplatsupport/src/mach/bcm/pl011_uart.c b/libplatsupport/src/mach/bcm/pl011_uart.c
--index 9463728..6bd63e8 100644
----- a/libplatsupport/src/mach/bcm/pl011_uart.c
--+++ b/libplatsupport/src/mach/bcm/pl011_uart.c
--@@ -119,7 +119,7 @@ static void pl011_uart_handle_irq(ps_chardevice_t *dev)
--     pl011_regs_t *r = pl011_uart_get_priv(dev);
-- 
--     // Clear (all) interrupts
---    r->icr = 0x7ff;
--+    r->icr = 0x7f0;
-- }
-- 
-- static int pl011_uart_cr_configure(ps_chardevice_t *dev)
--@@ -158,20 +158,33 @@ static int pl011_uart_baudrate_div_configure(ps_chardevice_t *dev)
-- {
--     // Base UART clock according to https://github.com/raspberrypi/firmware/issues/951
--     const uint32_t freq_uart_clk = 48000000;
---    const uint32_t baud_rate = 115200;
--+    // const uint32_t baud_rate = 115200;
--+    uint32_t baud_rate;
--+    switch (dev->id) {
--+        case BCM2xxx_UART3: // Telemetry
--+            baud_rate = 57600;
--+            break;
--+        default:
--+            baud_rate = 115200;
--+            break;
--+    }
-- 
---    double baud_div = (double) freq_uart_clk / (double)(16.0 * baud_rate);
---    double frac_div = baud_div - (uint32_t) baud_div;
--+    // double baud_div = (double) freq_uart_clk / (double)(16.0 * baud_rate);
--+    // double frac_div = baud_div - (uint32_t) baud_div;
--+    uint32_t divisor = (freq_uart_clk * 4) / baud_rate;
--+    uint32_t val;
--     pl011_regs_t *r = pl011_uart_get_priv(dev);
-- 
--     // Set IBRD register
---    uint32_t val = r->ibrd;
---    val |= (uint32_t) baud_div;
--+    // uint32_t val = r->ibrd;
--+    // val |= (uint32_t) baud_div;
--+    val = divisor >> 6;
--     r->ibrd = val;
-- 
--     // Set FBRD register
---    val = r->fbrd;
---    val |= (uint32_t)(frac_div * 64.0 + 0.5);
--+    // val = r->fbrd;
--+    // val |= (uint32_t)(frac_div * 64.0 + 0.5);
--+    val = divisor & 0x3f;
--     r->fbrd = val;
-- 
--     return 0;
--@@ -227,7 +240,8 @@ static int pl011_uart_configure(ps_chardevice_t *dev)
--      *
--      */
--     // Enable FIFO
---    //pl011_uart_enable_fifo(dev);
--+    // colored-dye (2023/03/22): enable FIFO
--+    pl011_uart_enable_fifo(dev);
-- 
--     // Enable UART
--     pl011_uart_enable(dev);
--@@ -300,7 +314,8 @@ int pl011_uart_init(const struct dev_defn *defn, const ps_io_ops_t *ops, ps_char
--     dev->handle_irq = &pl011_uart_handle_irq;
--     dev->irqs       = defn->irqs;
--     dev->ioops      = *ops;
---    dev->flags      = SERIAL_AUTO_CR;
--+    // dev->flags      = SERIAL_AUTO_CR;
--+    dev->flags      = 0;
-- 
--     pl011_uart_configure(dev);
-- 
--@@ -314,17 +329,21 @@ int pl011_uart_getchar(ps_chardevice_t *d)
-- 
--     // Only if receive FIFO is not empty
--     if (!(r->fr & FR_RXFE)) {
---        ch = (int)(r->dr & MASK(8));
---    }
--+        ch = (int)(r->dr);
--+        if (ch & 0xff00) {
--+            LOG_ERROR("ERROR: %04X", ch & 0xff00);
--+        }
--+        ch &= MASK(8);
--+     }
-- 
--     return ch;
-- }
-- 
-- int pl011_uart_putchar(ps_chardevice_t *d, int c)
-- {
---    if ((d->flags & SERIAL_AUTO_CR) && ((char)c == '\n')) {
---        pl011_uart_putchar(d, '\r');
---    }
--+    // if ((d->flags & SERIAL_AUTO_CR) && ((char)c == '\n')) {
--+    //     pl011_uart_putchar(d, '\r');
--+    // }
-- 
--     pl011_regs_t *r = pl011_uart_get_priv(d);
-- 
--
--project tools/seL4/
--diff --git a/cmake-tool/helpers/application_settings.cmake b/cmake-tool/helpers/application_settings.cmake
--index 955dd44..fb029e2 100644
----- a/cmake-tool/helpers/application_settings.cmake
--+++ b/cmake-tool/helpers/application_settings.cmake
--@@ -10,7 +10,7 @@ cmake_minimum_required(VERSION 3.8.2)
-- include_guard(GLOBAL)
-- 
-- function(ApplyData61ElfLoaderSettings kernel_platform kernel_sel4_arch)
---    set(binary_list "tx1;hikey;odroidc2;odroidc4;imx8mq-evk;imx8mm-evk;hifive;tqma8xqp1gb")
--+    set(binary_list "tx1;hikey;odroidc2;odroidc4;imx8mq-evk;imx8mm-evk;hifive;tqma8xqp1gb;bcm2711")
--     set(efi_list "tk1;rockpro64;quartz64")
--     set(uimage_list "tx2;am335x")
--     if(
--@@ -24,8 +24,8 @@ function(ApplyData61ElfLoaderSettings kernel_platform kernel_sel4_arch)
--     elseif(${kernel_platform} STREQUAL "bcm2837" AND ${kernel_sel4_arch} STREQUAL "aarch64")
--         set(ElfloaderImage "binary" CACHE STRING "" FORCE)
--         #rpi4
---    elseif(${kernel_platform} STREQUAL "bcm2711" AND ${kernel_sel4_arch} STREQUAL "aarch64")
---        set(ElfloaderImage "efi" CACHE STRING "" FORCE)
--+    # elseif(${kernel_platform} STREQUAL "bcm2711" AND ${kernel_sel4_arch} STREQUAL "aarch64")
--+    #     set(ElfloaderImage "efi" CACHE STRING "" FORCE)
--     elseif(${kernel_platform} IN_LIST binary_list)
--         set(ElfloaderImage "binary" CACHE STRING "" FORCE)
--     else()
-
-project tools/seL4/
-diff --git a/cmake-tool/helpers/application_settings.cmake b/cmake-tool/helpers/application_settings.cmake
-index 955dd44..fb029e2 100644
---- a/cmake-tool/helpers/application_settings.cmake
-+++ b/cmake-tool/helpers/application_settings.cmake
-@@ -10,7 +10,7 @@ cmake_minimum_required(VERSION 3.8.2)
- include_guard(GLOBAL)
- 
- function(ApplyData61ElfLoaderSettings kernel_platform kernel_sel4_arch)
--    set(binary_list "tx1;hikey;odroidc2;odroidc4;imx8mq-evk;imx8mm-evk;hifive;tqma8xqp1gb")
-+    set(binary_list "tx1;hikey;odroidc2;odroidc4;imx8mq-evk;imx8mm-evk;hifive;tqma8xqp1gb;bcm2711")
-     set(efi_list "tk1;rockpro64;quartz64")
-     set(uimage_list "tx2;am335x")
-     if(
-@@ -24,8 +24,8 @@ function(ApplyData61ElfLoaderSettings kernel_platform kernel_sel4_arch)
-     elseif(${kernel_platform} STREQUAL "bcm2837" AND ${kernel_sel4_arch} STREQUAL "aarch64")
-         set(ElfloaderImage "binary" CACHE STRING "" FORCE)
-         #rpi4
--    elseif(${kernel_platform} STREQUAL "bcm2711" AND ${kernel_sel4_arch} STREQUAL "aarch64")
--        set(ElfloaderImage "efi" CACHE STRING "" FORCE)
-+    # elseif(${kernel_platform} STREQUAL "bcm2711" AND ${kernel_sel4_arch} STREQUAL "aarch64")
-+    #     set(ElfloaderImage "efi" CACHE STRING "" FORCE)
-     elseif(${kernel_platform} IN_LIST binary_list)
-         set(ElfloaderImage "binary" CACHE STRING "" FORCE)
-     else()

project tools/seL4/
diff --git a/cmake-tool/helpers/application_settings.cmake b/cmake-tool/helpers/application_settings.cmake
index 955dd44..fb029e2 100644
--- a/cmake-tool/helpers/application_settings.cmake
+++ b/cmake-tool/helpers/application_settings.cmake
@@ -10,7 +10,7 @@ cmake_minimum_required(VERSION 3.8.2)
 include_guard(GLOBAL)
 
 function(ApplyData61ElfLoaderSettings kernel_platform kernel_sel4_arch)
-    set(binary_list "tx1;hikey;odroidc2;odroidc4;imx8mq-evk;imx8mm-evk;hifive;tqma8xqp1gb")
+    set(binary_list "tx1;hikey;odroidc2;odroidc4;imx8mq-evk;imx8mm-evk;hifive;tqma8xqp1gb;bcm2711")
     set(efi_list "tk1;rockpro64;quartz64")
     set(uimage_list "tx2;am335x")
     if(
@@ -24,8 +24,8 @@ function(ApplyData61ElfLoaderSettings kernel_platform kernel_sel4_arch)
     elseif(${kernel_platform} STREQUAL "bcm2837" AND ${kernel_sel4_arch} STREQUAL "aarch64")
         set(ElfloaderImage "binary" CACHE STRING "" FORCE)
         #rpi4
-    elseif(${kernel_platform} STREQUAL "bcm2711" AND ${kernel_sel4_arch} STREQUAL "aarch64")
-        set(ElfloaderImage "efi" CACHE STRING "" FORCE)
+    # elseif(${kernel_platform} STREQUAL "bcm2711" AND ${kernel_sel4_arch} STREQUAL "aarch64")
+    #     set(ElfloaderImage "efi" CACHE STRING "" FORCE)
     elseif(${kernel_platform} IN_LIST binary_list)
         set(ElfloaderImage "binary" CACHE STRING "" FORCE)
     else()
